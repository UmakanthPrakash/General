RegEx

I use regex101 for all my regex validations, I feel it has a clear UI where we can test our Regex and also give a short description on the wild characters in our regex

1. Match all the words that starts with abc or def
(^[abc]{3}(.*))|(^[def]{3}(.*))
	Desc of command
	^ indicates starting of the string
	[] encloses the text in context followed by length of the text
	| indicates or since we are looking for either of the terms

2. Similar to above but negation, we want match all except starting with abc or def
^(?!(^[abc]{3}(.*))|(^[def]{3}(.*))).*
	Desc: ?! is the key here, this is for negation

3. Grouping in regex should be done with ()

4. (mytext)(.*$)
	Desc: This expression matches all the characters starting with mytext for instance mytext_asdf_qwe.txt

5. [^\.].*(\.PDF)|.*(\.pdf)|.*(\.tar)+(\.gz)*
	Desc: it will match all file with following extensions .PDF or .pdf or .tar or .tar.gz
			thats the reason + is used with tar and gz

6. ^((?!ABC).)*$
	Desc: This will match all the words that does not start with ABC

7. ^((?!ABC).).*(\.tar)+(\.gz)*
	Desc: Matches all the files which are not starting with ABC<othercharacters>.tar and ABC<othercharacters>.tar.gz

8. ^(?:[\t ]*(?:\r?\n|\r))+
	Desc: Matches the emtpy lines in a text file, with this regex it easy to remove all the blank lines
	
9. Select an entire line if there is matching pattern in the line 
	for ex if the line is   
	"id": "218c4596-c62c-480f-a679-2f341056e42e",
	and I want to match the UUID then my regex could be [a-z0-9]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12} but matches only the UUID and not the whole line.
	To match the whole line we can use alterations and below is the example.
	^.*\b[a-z0-9]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}\b.*$
